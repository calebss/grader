/**
 * @module
 * @author ftheomunhoz
 * @description
 *
 */

var AcnSwagger = require('./node-swagger'),
    swaggerConfig = require('./swagger-config'),
    bodyParser = require('body-parser'),
    methodOverride = require('method-override'),
    path = require('path'),
    swaggerExpress = require("swagger-node-express"),
    glob = require("glob");

module.exports = function (app) {
    this.configure = function (conf) {
        var swagger = new AcnSwagger();

        swagger.ip = conf.ip;
        swagger.port = conf.port;
        swagger.express = app;

        setProperties(app);
        setHeaders(app, conf.headers);
        var swaggerNode = createRoutes(app, conf.swagger.url, conf.apis, conf.models);

        swaggerConfig(app, swaggerNode, conf.swagger);

        return swagger;
    };

    return this;
};

var setHeaders = function (app, headers) {
    if (headers === undefined) {
        headers = {};
    }

    headers["Access-Control-Allow-Origin"] = headers["Access-Control-Allow-Origin"] || "*";
    headers["Access-Control-Allow-Headers"] = headers["Access-Control-Allow-Headers"] || "Origin, X-Requested-With, Content-Type, Accept, Authorization";


    app.use(function (req, res, next) {
        for (var att in headers) {
            res.header(att, headers[att]);
        }

        res.header("Access-Control-Allow-Origin", req.header("Origin"));

        next();
    });
};

var setProperties = function (app) {
    app.engine('html', require('ejs').renderFile);
    app.set('view engine', 'html');

    app.use(methodOverride());

    app.use(function (req, res, next) {
        req.headers['content-type'] = 'application/json';
        next();
    });

    app.use(function (req, res, next) {
        req.headers['content-type'] = 'application/json';
        next();
    });

    app.use(bodyParser.json({limit: '5mb'}));

    app.use(bodyParser.urlencoded({
        extended: true,
        limit: '5mb'
    }));
};

var createRoutes = function (app, url, apis, models) {
    if (url.indexOf('/') !== 0) {
        url = '/' + url;
    }

    app.route('/').get(function (req, res) {
        res.redirect(url);
    });

    var swaggerNode = swaggerExpress.createNew(app);
    var root = __dirname.split('node_modules')[0];

    models.forEach(function (modelPattern) {
        glob.sync(path.join(root, modelPattern)).forEach(function (file) {
            swaggerNode.addModels(require(file));
        });
    });

    apis.forEach(function (apiPattern) {
        glob.sync(path.join(root, apiPattern)).forEach(function (file) {
            var api = require(file);

            app[api.spec.method.toLowerCase()](api.spec.path, api.action);
            swaggerNode['add' + api.spec.method.substring(0, 1).toUpperCase() + api.spec.method.substring(1).toLowerCase()](api);
        });
    });

    return swaggerNode;
};